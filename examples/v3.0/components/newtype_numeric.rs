/*
    Generated by gesha command; DO NOT EDIT BY HAND!
*/
pub mod schemas {
    use serde::Deserialize;
    use serde::Serialize;

    #[derive(Clone, Debug, Deserialize, PartialEq, Serialize)]
    pub struct IntegerDefaultValue(i64);
    impl From<i64> for IntegerDefaultValue {
        fn from(this: i64) -> Self {
            Self(this)
        }
    }
    impl From<IntegerDefaultValue> for i64 {
        fn from(this: IntegerDefaultValue) -> Self {
            this.0
        }
    }

    #[derive(Clone, Debug, Deserialize, PartialEq, Serialize)]
    pub struct Int64Value(i64);
    impl From<i64> for Int64Value {
        fn from(this: i64) -> Self {
            Self(this)
        }
    }
    impl From<Int64Value> for i64 {
        fn from(this: Int64Value) -> Self {
            this.0
        }
    }

    #[derive(Clone, Debug, Deserialize, PartialEq, Serialize)]
    pub struct Int32Value(i32);
    impl From<i32> for Int32Value {
        fn from(this: i32) -> Self {
            Self(this)
        }
    }
    impl From<Int32Value> for i32 {
        fn from(this: Int32Value) -> Self {
            this.0
        }
    }

    #[derive(Clone, Debug, Deserialize, PartialEq, Serialize)]
    pub struct NumberDefaultValue(f64);
    impl From<f64> for NumberDefaultValue {
        fn from(this: f64) -> Self {
            Self(this)
        }
    }
    impl From<NumberDefaultValue> for f64 {
        fn from(this: NumberDefaultValue) -> Self {
            this.0
        }
    }

    #[derive(Clone, Debug, Deserialize, PartialEq, Serialize)]
    pub struct FloatValue(f32);
    impl From<f32> for FloatValue {
        fn from(this: f32) -> Self {
            Self(this)
        }
    }
    impl From<FloatValue> for f32 {
        fn from(this: FloatValue) -> Self {
            this.0
        }
    }

    #[derive(Clone, Debug, Deserialize, PartialEq, Serialize)]
    pub struct DoubleValue(f64);
    impl From<f64> for DoubleValue {
        fn from(this: f64) -> Self {
            Self(this)
        }
    }
    impl From<DoubleValue> for f64 {
        fn from(this: DoubleValue) -> Self {
            this.0
        }
    }
}
