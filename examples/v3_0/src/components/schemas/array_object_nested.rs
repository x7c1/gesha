/*
    Generated by gesha command; DO NOT EDIT BY HAND!
*/
pub mod schemas {
    use serde::Deserialize;
    use serde::Serialize;

    #[derive(Clone, Debug, Deserialize, PartialEq, Serialize)]
    pub struct NumberList(Vec<Vec<number_list::NumberListItemItem>>);
    impl From<Vec<Vec<number_list::NumberListItemItem>>> for NumberList {
        fn from(this: Vec<Vec<number_list::NumberListItemItem>>) -> Self {
            Self(this)
        }
    }
    impl From<NumberList> for Vec<Vec<number_list::NumberListItemItem>> {
        fn from(this: NumberList) -> Self {
            this.0
        }
    }

    pub mod number_list {
        use serde::Deserialize;
        use serde::Serialize;

        /**
        The generated Rust type results in the weird suffix `-ItemItem`, but that's actually correct.
        See also `array_object.yaml`.
        */
        #[derive(Clone, Debug, Deserialize, PartialEq, Serialize)]
        pub struct NumberListItemItem {
            #[serde(default, skip_serializing_if = "Option::is_none")]
            pub a1: Option<f64>,
        }
    }
}
