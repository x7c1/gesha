/*
    Generated by gesha command; DO NOT EDIT BY HAND!
*/
pub mod schemas {
    use serde::Deserialize;
    use serde::Serialize;

    #[derive(Clone, Debug, Deserialize, PartialEq, Serialize)]
    pub struct HasTitle {
        /**
        title1
        */
        #[serde(default, skip_serializing_if = "Option::is_none")]
        pub x1: Option<i64>,

        /**
        title2
        */
        #[serde(default, skip_serializing_if = "Option::is_none")]
        pub x2: Option<i64>,
    }

    #[derive(Clone, Debug, Deserialize, PartialEq, Serialize)]
    pub struct HasDescription {
        /**
        description1
        */
        #[serde(default, skip_serializing_if = "Option::is_none")]
        pub name: Option<String>,
    }

    #[derive(Clone, Debug, Deserialize, PartialEq, Serialize)]
    pub struct WithWhiteSpaces {
        /**
        title1

        description1
        */
        #[serde(default, skip_serializing_if = "Option::is_none")]
        pub id: Option<i64>,
    }

    #[derive(Clone, Debug, Deserialize, PartialEq, Serialize)]
    pub struct HasLineBreak {
        /**
        The quick brown fox jumps over the lazy dog.
        */
        #[serde(default, skip_serializing_if = "Option::is_none")]
        pub foo: Option<i64>,
    }
}
