/*
    Generated by gesha command; DO NOT EDIT BY HAND!
*/
pub mod schemas {
    use serde::Deserialize;
    use serde::Serialize;

    #[derive(Clone, Debug, Deserialize, PartialEq, Serialize)]
    pub struct Sample0 {
        pub id: i64,
        pub sample0_nested1: sample0::Sample0Nested1,
    }

    pub mod sample0 {
        use serde::Deserialize;
        use serde::Serialize;

        #[derive(Clone, Debug, Deserialize, PartialEq, Serialize)]
        pub enum Sample0Nested1 {
            #[serde(rename = "x1")]
            X1,
            #[serde(rename = "x2")]
            X2,
        }
    }

    #[derive(Clone, Debug, Deserialize, PartialEq, Serialize)]
    pub struct Sample1 {
        pub id: i64,
        pub sample1_nested1: sample1::Sample1Nested1,
    }

    pub mod sample1 {
        use serde::Deserialize;
        use serde::Serialize;

        #[derive(Clone, Debug, Deserialize, PartialEq, Serialize)]
        pub struct Sample1Nested1 {
            pub sample1_nested2: sample1_nested1::Sample1Nested2,
        }

        pub mod sample1_nested1 {
            use serde::Deserialize;
            use serde::Serialize;

            #[derive(Clone, Debug, Deserialize, PartialEq, Serialize)]
            pub enum Sample1Nested2 {
                #[serde(rename = "y1")]
                Y1,
                #[serde(rename = "y2")]
                Y2,
            }
        }
    }
}
