/*
    Generated by gesha command; DO NOT EDIT BY HAND!
*/
pub mod schemas {
    use serde::Deserialize;
    use serde::Serialize;

    #[derive(Clone, Debug, Deserialize, PartialEq, Serialize)]
    pub struct BasicErrorModel {
        pub message: String,
        pub code: i64,
    }

    #[derive(Clone, Debug, Deserialize, PartialEq, Serialize)]
    pub struct ExtendedErrorModel {
        pub message: String,
        pub code: i64,
        pub root_cause: String,
        pub sample1_nested: Option<extended_error_model::Sample1Nested>,
    }

    pub mod extended_error_model {
        use serde::Deserialize;
        use serde::Serialize;

        #[derive(Clone, Debug, Deserialize, PartialEq, Serialize)]
        pub struct Sample1Nested {
            pub foo1: String,
            pub foo2: f64,
            pub bar1: String,
            pub bar2: f64,
        }
    }

    #[derive(Clone, Debug, Deserialize, PartialEq, Serialize)]
    pub struct Foo {
        pub foo1: String,
        pub foo2: f64,
    }

    #[derive(Clone, Debug, Deserialize, PartialEq, Serialize)]
    pub struct Bar {
        pub bar1: String,
        pub bar2: f64,
    }
}
